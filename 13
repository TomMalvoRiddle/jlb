import java.util.Random;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class RandomNumbers {

    public static void main(String[] args) {
        Random random = new Random();
        int[] numbers = new int[100];
        for (int i = 0; i < numbers.length; i++) {
            numbers[i] = random.nextInt(201) - 100;
        }

        ExecutorService executorService = Executors.newFixedThreadPool(3);

        executorService.submit(() -> {
            int negativeCount = 0;
            for (int number : numbers) {
                if (number < 0) {
                    negativeCount++;
                }
            }
            System.out.println("Negative count: " + negativeCount);
        });

        executorService.submit(() -> {
            int positiveEvenCount = 0;
            for (int number : numbers) {
                if (number > 0 && number % 2 == 0) {
                    positiveEvenCount++;
                }
            }
            System.out.println("Positive even count: " + positiveEvenCount);
        });

        executorService.submit(() -> {
            int positiveOddCount = 0;
            for (int number : numbers) {
                if (number > 0 && number % 2 != 0) {
                    positiveOddCount++;
                }
            }
            System.out.println("Positive odd count: " + positiveOddCount);
        });

        executorService.shutdown();
    }
}
